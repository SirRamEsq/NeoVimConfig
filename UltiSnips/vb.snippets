snippet ARRAY_SEARCH
' Returns array index of found string or -1
Function IsInArrayCaseInsensitive(stringToBeFound As String, arr As Variant) As Long
  Dim i As Long
  ' default return value if value not found in array
  IsInArrayCaseInsensitive = -1

  For i = LBound(arr) To UBound(arr)
    If StrComp(UCase(stringToBeFound), UCase(arr(i)), vbTextCompare) = 0 Then
      IsInArrayCaseInsensitive = i
      Exit For
    End If
  Next i
End Function
endsnippet

snippet ERROR_TRAP
ErrTrap:
	Dim Msg As String
	Msg = "Error # " & Str(Err.Number) & " was generated by " _
	            & Err.Source & " | " & Err.Description
	MsgBox Msg, , "Error", Err.Helpfile, Err.HelpContext
endsnippet

snippet FOR_RANGE
Dim rw As Range
For Each rw In sh.UsedRange.Rows
Next rw
endsnippet

snippet FOR_ARRAY
For Each element In $1
Next element
endsnippet

snippet COLUMN_TO_ARRAY
Dim RangeString As String
' Skip header
RangeString = "A2:A" & Format(ROW_COUNT - 1)
ColA = Application.Transpose(sh.Range(RangeString).Value)
endsnippet

snippet PROGRESS_BAR
' Every 100 rows
If (rowID Mod 100) = 0 Then
	Application.StatusBar = "Progress: " & Format(rowID, "0") & " Out of " & Format(ROW_COUNT, "0")
	' Yield to OS for a moment, allowing for a screen update
	DoEvents
End If
endsnippet

snippet LOAD_COLUMN_TO_ARRAY
' Returns a 1-dimensional array
Function LoadColumnToArray(sheet As Worksheet, column As Integer) As Variant
	Dim strArray As Variant
	Dim TotalRows As Long

	TotalRows = sheet.Rows(sheet.Rows.Count).End(xlUp).Row
	' skip headers
	strArray = sheet.Range(sheet.Cells(2, column), sheet.Cells(TotalRows, column)).Value

	LoadArray = Application.Transpose(strArray)
End Function
endsnippet

snippet ARRAY_LENGTH
ArrayLen = UBound(arr) - LBound(arr) + 1
endsnippet

snippet 2D_ARRAY_GET_ROW
' array2D - a 2-dimensional array returned from range
' rows - a 1-dimensional array of numbers representing rows
' Returns a 1-dimensional array
Function Array2DGetRow(array2D As Array, rows As Array) As Array
	Array2DGetRow = Application.Index(array2D, rows, 0)
End Function
endsnippet

snippet 2D_ARRAY_GET_COLUMN
' array2D - a 2-dimensional array returned from range
' cols - a 1-dimensional array of numbers representing columns
' Returns a 1-dimensional array
Function Array2DGetCol(array2D As Array, cols As Array) As Array
	Array2DGetCol = Application.Index(array2D, 0, Application.Transpose(cols))
End Function
endsnippet

snippet SET_WORKSHEET
Set $1 = ActiveWorkbook.Sheets("$2")
endsnippet

snippet ASSIGN_ARRAY_TO_COLUMN
endsnippet
